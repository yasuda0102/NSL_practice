// Driver for module test

#include "declaration.nsl"

declare driver simulation {

}

module driver {
    primitive_cpu cpu;
    dpram mem_inst, mem_data;

    reg counter[10] = 0;

    counter++;
    if (counter == 255) _finish("Simulation End.");

    func cpu.write_d {
        mem_data.addr1 = cpu.addr1_d;
        mem_data.wdata1 = cpu.wdata_d;
        mem_data.we1 = 0b1;
    }

    func cpu.read_i {
        mem_inst.addr2 = cpu.addr2_i;
        mem_inst.wdata2 = 0x00000000;
        mem_inst.we2 = 0b0;
        return mem_inst.rdata2;
    }

    func cpu.read_d {
        mem_data.addr2 = cpu.addr2_d;
        mem_data.wdata2 = 0x00000000;
        mem_data.we2 = 0b0;
        return mem_data.rdata2;
    }
}