// Driver for module test

#include "declaration.nsl"

declare driver simulation {

}

module driver {
    comparator32 c32;
    reg counter[7] = 0;

    func_self test();

    counter++;
    if (counter == 0b0000000) test();
    if (counter == 100) _finish("Simulation End.");

    func test seq {
        // Signed Comparation
        _display("0 < 1: %b", c32.exec(0b0011, 0x00000000, 0x00000001));
        _display("0 < 0: %b", c32.exec(0b0011, 0x00000000, 0x00000000));
        _display("-32 < 10: %b", c32.exec(0b0011, 0xffffffe0, 0x0000000a));
        _display("0 >= 1: %b", c32.exec(0b0100, 0x00000000, 0x00000001));
        _display("0 >= 0: %b", c32.exec(0b0100, 0x00000000, 0x00000000));
        _display("-32 >= 10: %b", c32.exec(0b0100, 0xffffffe0, 0x0000000a));

        // Unsigned Comparation
        _display("4294967264 < 10: %b", c32.exec(0b1011, 0xffffffe0, 0x0000000a));
        _display("4294967264 >= 10: %b", c32.exec(0b1100, 0xffffffe0, 0x0000000a));
    }
}