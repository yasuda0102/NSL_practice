// Driver for module test

#include "declaration.nsl"

declare driver simulation {

}

module driver {
    primitive_cpu cpu;
    dpram mem_inst, mem_data;

    reg counter[10] = 0;

    counter++;
    if (counter == 255) _finish("Simulation End.");

    func cpu.write_d {
        mem_data.addr_w = cpu.addrW_d;
        mem_data.wdata = cpu.wdata_d;
        mem_data.we = 0b1;
    }

    func cpu.read_i {
        mem_inst.addr_r = cpu.addrR_i;
        mem_inst.addr_w = 0x00000000;
        mem_inst.wdata = 0x00000000;
        mem_inst.we = 0b0;

        return mem_inst.rdata;
    }

    func cpu.read_d {
        mem_data.addr_r = cpu.addrR_d;
        mem_data.wdata = 0x00000000;
        mem_data.we = 0b0;

        return mem_data.rdata;
    }
}